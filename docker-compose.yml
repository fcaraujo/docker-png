version: '3.7'

networks:
  monitor-net:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: 'monitoring'

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
        - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: 'monitoring'

  tomcat-exporter:
    image: tomcat-with-jmx-exporter:jdk8-openjdk-slim-buster
    container_name: tomcat-exporter 
    restart: unless-stopped
    ports:
      # - 8080:8080
      - 8686:8686

  # jmx-exporter:
  #   image: sscaling/jmx-prometheus-exporter
  #   ports:
  #     - 5556:5556
  #   restart: unless-stopped
  #   volumes:
  #     - ../docker-tomcat/temp-config.yml:/opt/jmx_exporter/config.yml
